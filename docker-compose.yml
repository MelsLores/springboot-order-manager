# MELI Order Manager - Docker Compose Configuration
# This file provides database services for different environments

version: '3.8'

services:
  # PostgreSQL for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: orderdb-dev
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - order-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for Testing
  postgres-test:
    image: postgres:15-alpine
    container_name: orderdb-test
    environment:
      POSTGRES_DB: orderdb_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - order-manager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Optional - for caching in production)
  redis:
    image: redis:7-alpine
    container_name: orderdb-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - order-manager-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: orderdb-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8090:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - order-manager-network
    depends_on:
      - postgres-dev
      - postgres-test
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  postgres_test_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  order-manager-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16